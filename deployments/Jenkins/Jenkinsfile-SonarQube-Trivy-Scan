pipeline{
    agent any
     options {
        buildDiscarder(logRotator(numToKeepStr: '3'))
      }
      environment {
        DOCKERHUB_CREDENTIALS = credentials('globaldockerhub')
        // appName = "server"
        registry = ""
        // registryCredential = ""
        // projectPath = ""
        // AWS_ACCESS_KEY_ID = credentials('your_aws_access_key_id')
        // AWS_SECRET_ACCESS_KEY = credentials('your_aws_secret_access_key')
        // AWS_REGION = 'your_aws_region'
        // EC2_INSTANCE = 'your_ec2_instance_id'
        // SSH_KEY = credentials('your_ssh_key')
      }
    stages {

            stage('Environment'){
            steps {
                sh 'python3 --version'
                    git url: 'https://github.com/joelwembo/django-multitenant-saas-ecommerce-kubernetes.git' 
                }
        
            }

            stage('SonarQube Analysis') {
                // environment {
                //     // Set environment variables required for SonarQube scanner
                //     SONAR_SCANNER_HOME = tool 'SonarQube Scanner'
                // }
                steps {
                    // Run SonarQube scanner
                    // script {
                    //     withSonarQubeEnv('SonarQube Server') {
                    //         sh "${env.SONAR_SCANNER_HOME}/bin/sonar-scanner"
                    //     }
                    // }
                     sh 'python3 --version'
                }
           }
            stage('Build'){ 
                steps  {
                    
                    sh 'docker build -t joelwembo/prodxcloud-django-web:latest --no-cache .'
                    }
            }
            stage('Login') {
                steps {
                    sh 'echo $DOCKERHUB_CREDENTIALS_PSW | docker login -u $DOCKERHUB_CREDENTIALS_USR --password-stdin'
                    
                }
            }

            stage('Trivy Scan') {
                steps {
                    sh 'trivy image joelwembo/prodxcloud-django-web:latest'
                }
            }

           stage('Docker Push') {
                steps {
                    sh 'docker images'
                    // sh 'docker images --filter "reference=prodxcloud-django-web*"' 
                    // sh 'docker push joelwembo/prodxcloud-django-web:latest'
                }
            }
            stage('Run the Application'){
                steps {
                    sh 'docker images'
                    // sh 'docker-compose up -d'
                }
            }
           
    }


}